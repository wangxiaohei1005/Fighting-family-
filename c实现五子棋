game.h
#define GAME_H
#define ROW 5
#define COL 5

void DisplayBoard(char board[ROW][COL], int row, int col);
void GamePlayer(char board[ROW][COL], int row, int col);
void ComputerPlayer(char board[ROW][COL], int row, int col);
char CheckWinner(char board[ROW][COL], int row, int col);

test.c
#define _CRT_SECURE_NO_WARNINGS 1
#include <time.h>
#include <stdio.h>
#include "game.h"

void menu()
{
	printf("***************************************\n");
	printf("***********  1.开始游戏   *************\n");
	printf("***********  0.结束游戏   *************\n");
	printf("***************************************\n");
}

void game()
{
	char tmp = 0;
	char board[ROW][COL] = { 0 };
	printf("进入五子棋游戏!!!\n");
	while (1)
	{
		DisplayBoard(board, ROW, COL);
		tmp = CheckWinner(board, ROW, COL);
		if (tmp != 'c')//不为平局
		{
			break;
		}
		GamePlayer(board, ROW, COL);
		DisplayBoard(board, ROW, COL);
		tmp = CheckWinner(board, ROW, COL);
		if (tmp != 'c')
		{
			break;
		}
		ComputerPlayer(board, ROW, COL);
	}
	if (tmp  == '*')
		{
			printf("玩家赢啦！！！\n");
		}
	else if (tmp == '#')
		{
			printf("电脑赢，请认真游戏！！！\n");
		}
	else
		{
			printf("平局！！！\n");
		}
}
int main()
{
	int Input = 0;
	do
	{
	menu();
	printf("请输入你的选择：\n");
	scanf("%d", &Input);
	switch (Input)
	{
	case 1:
		game();
		break;
	case 0:
		printf("See you!!!");
		break;
	default:
		printf("您的输入有误!请重新输入！\n");
		break;
	}
    }while (Input);
	printf("\n");
	system("pause");
	return 0;
}


game.c
#define _CRT_SECURE_NO_WARNINGS 1
#include "game.h"
#include <stdio.h>
#include <time.h>
#include <stdlib.h>
#include <string.h>


//棋盘的显示
void DisplayBoard(char board[ROW][COL], int row, int col)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			printf(" %c ", board[i][j]);
			if (j != col - 1)
			{
				printf("|");
			}
		}
		printf("\n");
		for (j = 0; j < col; j++)
		{
			printf("---");
			if (j != col - 1)
			{
				printf("|");
			}
		}
		printf("\n");
	}
}

//对棋盘空位的判断
int CheckBoard(char board[ROW][COL], int row, int col)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			if (board[i][j] == ' ')
				return 0;
		}
	}
	return 1;
}
//玩家走棋操作
void GamePlayer(char board[ROW][COL], int row, int col)
{
	int x = 0;
	int y = 0;
	printf("玩家请走：\n");
	while (1)
	{
		scanf("%d%d", &x, &y);
		if (x > 0 && x <= row && y > 0 && y <= col)
		{
			if (board[x - 1][y - 1] == ' ')
			{
				board[x][y] = '*';
				break;
			}
			else
			{
				printf("该坐标已经被占用啦，请您重新输入：\n");
			}
		}
		else
		{
			printf("该坐标输入非法，请您重新输入：\n");
		}
	}
}
//电脑走棋操作
void ComputerPlayer(char board[ROW][COL], int row, int col)
{
	int x = 0;
	int y = 0;
	printf("电脑走：\n");
	while (1)
	{
		x = rand() % (row + 1);//判断五子棋的区域
		y = rand() % (col + 1);
		if (x > 0 && x <= row && y > 0 && y <= col)
		{
			if (board[x - 1][y - 1] == ' ')
			{
				board[x - 1][y - 1] = '#';
				break;
			}
		}
	}
}
char CheckWinner(char board[ROW][COL], int row, int col)
{
	int i = 0;
	int j = 0;
	int ret = 0;
//判断行
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			if (board[i][0] == board[i][1] && board[i][0] == board[i][2])
			{
				return board[i][0];
			}
		}
	}
//判断列
	for (j = 0; j < col; j++)
	{
		for (i = 0; i < row; i++)
		{
			if (board[0][j] == board[1][j] && board[0][j] == board[2][j])
			{
				return board[0][j];
			}
		}
	}
//判断斜向
	for (j = 0; j < col; j++)
	{
		for (i = 0; i < row; i++)
		{
			if (board[0][0] == board[1][1] && board[0][j] == board[2][1])
			{
				return board[1][1];
			}
		}
	}
//反斜向判断
	for (i = 0; i < col; i++)
	{
		for (j = 0; j < row; j++)
		{
			if (board[0][0] == board[1][1] && board[0][j] == board[2][1])
			{
				return board[1][1];
			}
		}
	}
	if (CheckBoard(board, row, col) == 0)
	{
		//继续
		return 'c';
	}
	//平局
	return 'q';
}
